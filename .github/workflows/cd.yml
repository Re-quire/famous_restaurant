name: Build and Deploy to EC2

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: application.yml 파일 생성
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrests.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}

      - name: ECR login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker 이미지 생성
        run: docker build -t my-yummy .

      - name: Docker 이미지에 태그 붙이기
        run: docker tag my-yummy ${{ secrets.ECR_REGISTRY }}/my-yummy:latest

      - name: ECR에 Docker 이미지 Push
        run: docker push ${{ secrets.ECR_REGISTRY }}/my-yummy:latest

      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST}}
          username: ${{ secrets.EC2_USERNAME}}
          key: ${{ secrets.EC2_PRIVATE_KEY}}
          script_stop: true
          script: |
            cd ~/my-yummy
            docker compose down || true
            docker pull ${{ secrets.ECR_REGISTRY }}/my-yummy:latest
            docker compose up -d --build